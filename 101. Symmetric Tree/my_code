/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null){
            return true;
        }
        if (root.left != null && root.right != null){
            return check(root.left, root.right);
        }else if (root.left == null && root.right == null){
            return true;
        }else{
            return false;
        }
    }
    public boolean check(TreeNode leftnode, TreeNode rightnode){
        if (leftnode == null && rightnode == null){
            return true;
        }
        if (leftnode != null && rightnode == null){
            return false;
        }
        if (leftnode == null && rightnode != null){
            return false;
        }
        if (leftnode.val != rightnode.val){
            return false;
        }
       
        return check(leftnode.left, rightnode.right) && check(leftnode.right, rightnode.left);
    }

}
