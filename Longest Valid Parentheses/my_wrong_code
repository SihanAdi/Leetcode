public class Solution {

    public int longestValidParentheses(String s) {
        if (s.length() < 2){
            return 0;
        }
        int ans = 0;
        int count = 0;
        Stack<Character> stack = new Stack<Character>();
        for (int i = 0; i < s.length(); i++){
            if (s.charAt(i) == ')' && stack.isEmpty()){
                if (ans < count){
                    ans = count;
                }
                count = 0;
                continue;
            }
            else if (s.charAt(i) == ')' && !stack.isEmpty() && stack.peek() == '('){
                stack.pop();
                count += 2;
            }
            else if (s.charAt(i) == ')' && !stack.isEmpty() && stack.peek() != '('){
                if (ans < count){
                    ans = count;
                }
                count = 0;
                stack.push(s.charAt(i));
            }
            if (s.charAt(i) == '(' && !stack.isEmpty()){
                stack.push(s.charAt(i));
                count = 0;
            }
            if (s.charAt(i) == '(' && stack.isEmpty()){
                stack.push(s.charAt(i));
                
            }
        }
        if (ans < count){
            ans = count;
        }
        return ans;
    }
}
