class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int n = nums2.length;
        if (m + n == 1){
            if (m == 0){
                return nums2[0];
            }else{
                return nums1[0];
            }
        }
        
        int[] nums = new int[m + n];
        
        double ans;
        int i = 0;
        int j = 0;
        for (int c = 0; c <= (m + n) / 2; c++){
            if (i < m && j < n){
                if (nums1[i] <= nums2[j]){
                    nums[c] = nums1[i];
                    i++;
                }else{
                    nums[c] = nums2[j];
                    j++;
                }
            }
            else if (i >= m){
                nums[c] = nums2[j];
                j++;
            }
            else if (j >= n){
                nums[c] = nums1[i];
                i++;
            }
            
        }
        
        if ((m + n) % 2 == 0){
            ans = (double)(nums[(m + n) / 2] + nums[(m + n) / 2 - 1]) / 2;
        }else{
            ans = nums[(m + n) / 2];
        }
        return ans;
    }
}
