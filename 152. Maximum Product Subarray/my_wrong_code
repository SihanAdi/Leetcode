class Solution {
    public int maxProduct(int[] nums) {
        int[] dp = new int [nums.length];
        dp[0] = nums[0];
        int max = dp[0];
        int neg = 0;
        if (dp[0] < 0){
            neg = dp[0];
        }
        for (int i = 1; i < nums.length; i++){
            if (nums[i] < 0){
                if (neg < 0){
                    dp[i] = Math.max(neg * dp[i - 1] * nums[i], (Math.max(dp[i - 1] * nums[i], nums[i])));
                    max = Math.max(dp[i], max);
                    neg = 0;
                }else{
                    neg = dp[i - 1] * nums[i];
                    dp[i] = Math.max(dp[i - 1] * nums[i], nums[i]);
                    max = Math.max(dp[i], max);
                }
            }
            else{
                dp[i] = Math.max(dp[i - 1] * nums[i], nums[i]);
                max = Math.max(dp[i], max);
            }
        }
        return max;
    }
}
