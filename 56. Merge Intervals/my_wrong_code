class Solution {
    public int[][] merge(int[][] intervals) {
        int count = 0;
        for (int i = 0; i < intervals.length; i++){
            if (intervals[i][0] < 0){
                continue;
            }
            int max = intervals[i][1];
            int index = i;
            for (int j = i + 1; j < intervals.length; j++){
                if (intervals[j][0] <= max && intervals[j][1] >= intervals[index][0]){
                    if (max < intervals[j][1]){
                        max = intervals[j][1];
                    }
                    if (intervals[j][0] < intervals[index][0]){
                        intervals[index][0] = -1;
                        index = j;
                    }else{
                        intervals[j][0] = -1;
                    }
                    
                }
            }
            intervals[index][1] = max;
        }
        for (int i = 0; i < intervals.length; i++){
            if (intervals[i][0] < 0){
                count++;
            }
        }
        int[][] ans = new int[intervals.length - count][2];
        int t = 0;
        for (int i = 0; i < intervals.length; i++){
            if (intervals[i][0] < 0){
                continue;
            }else{
                ans[t][0] = intervals[i][0];
                ans[t][1] = intervals[i][1];
                t++;
            }
            
        }
        return ans;
    }
}
