class Solution {
    
    
    public int[] searchRange(int[] nums, int target) {
        int firstOccurrence = bs(nums, target, true);
        
        if (firstOccurrence == -1) {
            return new int[]{-1, -1};
        }
        
        int lastOccurrence = bs(nums, target, false);
        
        return new int[]{firstOccurrence, lastOccurrence};
        
    }
    public int bs(int[] nums, int target, boolean isleft){
        int i = 0;
        int j = nums.length - 1;
        while (i <= j){
            int mid = (i + j)/2;
            if (nums[mid] == target){
                if (isleft){
                    if (mid == i || nums[mid - 1] != target){
                        return mid;
                    }
                    j = mid - 1;
                    
                }else{
                    if (mid == j || nums[mid + 1] != target){
                        return mid;
                    }
                    i = mid + 1;
                    
                }
            }
            else if (nums[mid] > target) {
                j = mid - 1;
            } else {
                i = mid + 1;
            }
        }
        return -1;
    }
}
