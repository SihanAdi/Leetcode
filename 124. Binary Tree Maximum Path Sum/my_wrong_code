/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        if (root.left == null && root.right == null){
            return root.val;
        }
        inorder (root, 0);
        return max;
    }
    public int inorder(TreeNode node, int sum){
        if (node.left == null && node.right == null){
            return node.val;
        }
        if (node.left != null){
            sum += inorder (node.left, sum);
            max = Math.max(max, sum);
            if (sum < 0){
                sum = 0;
            }
        }
        
        sum += node.val;
        max = Math.max(max, sum);
        if (sum < 0){
            sum = 0;
        }
        if (node.right != null){
            sum += inorder (node.right, sum);
            max = Math.max(max, sum);
            if (sum < 0){
                sum = 0;
            }
        }
        
        return 0;
    }
}
