/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        
        inorder (root);
        return max;
    }
    public int inorder(TreeNode node){
        if (node == null){
            return 0;
        }
        int l = Math.max(inorder(node.left), 0);
        int r = Math.max(inorder(node.right), 0);
        int price = node.val + l + r;
        max = Math.max(price, max);
        
        return node.val + Math.max(l, r);
    }
}
