class Solution {
    public String minWindow(String s, String t) {
        if (s.length() < t.length()){
            return "";
        }
        int count = 0;
        int min = Integer.MAX_VALUE;
        int index = 0;
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        for (int i = 0; i < s.length(); i++){
            String str = String.valueOf(s.charAt(i));
            if (t.contains(str)){
                if (map.isEmpty()){
                    index = i;
                }
                if (map.containsKey(s.charAt(i))){
                    if (map.get(s.charAt(i)) == index && i != ){
                        
                    }
                    map.replace(s.charAt(i), i);
                }else{
                    count++;
                    map.put(s.charAt(i), i);
                }
                if (count == t.length()){
                    int size = i - index + 1;
                    min = Math.min(min, size);
                    if (i != s.length() - 1){
                        map.remove(s.charAt(index));
                        int tmp = Integer.MAX_VALUE;
                        for (Character j : map.keySet()){
                            if (map.get(j) < tmp){
                                tmp = map.get(j);
                            }
                        }
                        index = tmp;
                        count -= 1;
                    }
                }
            }
        }
        if (min != Integer.MAX_VALUE){
            return s.substring(index, (index + min));
        }else{
            return "";
        }
    }
}
